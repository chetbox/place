path /canvas/the-one-and-only is Canvas {
  read() { true }
}

path /canvas/the-one-and-only/canvas {
  write() { true }
}

path /canvas/the-one-and-only/history/{key1} {
  write() { createOnly(this) }
}

type Canvas {
  depth: Integer;
  canvas: Square<Square<Square<Square<Square<Square<Square<Color>>>>>>>;
  history: ColorHistoryItem[];

  validate() { this.depth == 7 }
}

type Square<T> {
  '00': T | Null;
  '01': T | Null;
  '10': T | Null;
  '11': T | Null;
}

type Color extends Integer {
  validate() { this >= 0 && this < 16 }
}

// From https://github.com/firebase/bolt/blob/87a57ac87486913c50f9484b388a54fcfa61204e/samples/regexp.bolt
type Integer extends Number {
  validate() { (this + '').test(/^-?\d+$/) }
}

type HistoryItem<T> {
  value: T;
  x: Integer;
  y: Integer;
  timestamp: CurrentTimestamp;
}

type ColorHistoryItem extends HistoryItem<Color> {}

type CurrentTimestamp extends Number {
  validate() { this == now }
}

// Helper functions

createOnly(value) {
  prior(value) == null && value != null
}